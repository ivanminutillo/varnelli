{"version":3,"sources":["cljss/sheet.cljs"],"mappings":"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","names":["cljss.sheet/limit","cljss.sheet/make-style-tag","tag","goog.dom/createElement","head","goog.dom/getElementsByTagNameAndClass","goog.object/set","G__37580","G__37581","goog.dom/appendChild","goog.dom/createTextNode","x__4433__auto__","m__4434__auto__","cljss.sheet/insert!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","cljss.sheet/flush!","cljss.sheet/filled?","cljss.sheet/ISheet","this","css","cls-name","cljs.core/PROTOCOL_SENTINEL","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","cljss.sheet/Sheet","cljss.sheet/->Sheet","sheet","cache","rule","js/Error","fexpr__37582","cljs.core/deref","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/conj","cljs.core/ifn?","rules-count","G__37583","G__37584","goog.object/get","cljss.utils/dev?","G__37585","G__37586","e37587","e","js/console.warn","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/count","cljss.sheet/create-sheet","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns cljss.sheet\n  (:require [goog.object :as gobj]\n            [goog.dom :as dom]\n            [cljss.utils :refer [dev?]]))\n\n(def ^:private limit 65534)\n\n(defn- make-style-tag []\n  (let [tag (dom/createElement \"style\")\n        head (aget (dom/getElementsByTagNameAndClass \"head\") 0)]\n    (gobj/set tag \"type\" \"text/css\")\n    (dom/appendChild tag (dom/createTextNode \"\"))\n    (dom/appendChild head tag)\n    tag))\n\n\n(defprotocol ISheet\n  (insert! [this css cls-name])\n  (flush! [this])\n  (filled? [this]))\n\n(deftype Sheet [tag sheet cache]\n  ISheet\n  (insert! [this rule cls-name]\n    (when (filled? this)\n      (throw (js/Error. (str \"A stylesheet can only have \" limit \" rules\"))))\n    (when-not (@cache cls-name)\n      (swap! cache conj cls-name)\n      (let [rule (if (ifn? rule) (rule) rule)\n            rules-count (gobj/get (gobj/get sheet \"cssRules\") \"length\")]\n        (if dev?\n          (dom/appendChild tag (dom/createTextNode rule))\n          (try\n            (.insertRule sheet rule rules-count)\n            (catch :default e\n              (when dev?\n                (js/console.warn \"Illegal CSS rule\" rule))))))))\n  (flush! [this]\n    (-> tag\n        .-parentNode\n        (.removeChild tag)))\n  (filled? [this]\n    (= (count @cache) limit)))\n\n(defn create-sheet []\n  (let [tag (make-style-tag)\n        sheet (gobj/get tag \"sheet\")]\n    (Sheet. tag sheet (atom #{}))))\n"]}